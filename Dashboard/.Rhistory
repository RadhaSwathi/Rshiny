ESR$`SesimicZone`<-as.factor(ESR$`SesimicZone`)
ESR$`NatureofStrata`<-as.factor(ESR$`NatureofStrata`)
trainIndex<-sample(1:n, size = round(0.8*n), replace=FALSE)
traindata<-ESR[trainIndex,]
testdata<-ESR[-trainIndex,]
testPCC<-testdata$PCC
testRCC<-testdata$RCC
testfw<-testdata$Formwork
teststeel<-testdata$`Rft`
testrate<-traindata$`RatePerLit`
MPCC <- randomForest(PCC ~ ., data=traindata[c(1,3,4,5,7,8,9)], ntree=5)
MRCC <- randomForest(RCC ~ ., data=traindata[c(1,3,4,5,7,8,10)], ntree=5)
Mfw <-randomForest(Formwork ~ ., data=traindata[c(1,3,4,5,7,8,11)], ntree=5)
MSteel <-randomForest(Rft ~ ., data=traindata[c(1,3,4,5,7,8,12)], ntree=5)
Mrate <-randomForest(RatePerLit ~ ., data=traindata[c(1,3,4,5,7,8,13)], ntree=5)
predPCC<-predict(MPCC, testdata[c(1,3,4,5,7,8,9)])
predRCC<-predict(MRCC, testdata[c(1,3,4,5,7,8,10)])
predfw<-predict(Mfw, testdata[c(1,3,4,5,7,8,11)])
predSteel<-predict(MSteel, testdata[c(1,3,4,5,7,8,12)])
predrate<-predict(Mrate, testdata[c(1,3,4,5,7,8,12)])
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = testPCC, colour = "yellow")) +
geom_line(aes(y = predPCC, colour = "red"))
set.seed(100)
n=nrow(ESR)
ESR$PCC[is.na(ESR$PCC)] <- 0
ESR$State<-as.factor(ESR$State)
ESR$Project<-as.factor(ESR$Project)
ESR$`SesimicZone`<-as.factor(ESR$`SesimicZone`)
ESR$`NatureofStrata`<-as.factor(ESR$`NatureofStrata`)
trainIndex<-sample(1:n, size = round(0.5*n), replace=FALSE)
traindata<-ESR[trainIndex,]
testdata<-ESR[-trainIndex,]
testPCC<-testdata$PCC
testRCC<-testdata$RCC
testfw<-testdata$Formwork
teststeel<-testdata$`Rft`
testrate<-traindata$`RatePerLit`
MPCC <- randomForest(PCC ~ ., data=traindata[c(1,3,4,5,7,8,9)], ntree=5)
MRCC <- randomForest(RCC ~ ., data=traindata[c(1,3,4,5,7,8,10)], ntree=5)
Mfw <-randomForest(Formwork ~ ., data=traindata[c(1,3,4,5,7,8,11)], ntree=5)
MSteel <-randomForest(Rft ~ ., data=traindata[c(1,3,4,5,7,8,12)], ntree=5)
Mrate <-randomForest(RatePerLit ~ ., data=traindata[c(1,3,4,5,7,8,13)], ntree=5)
predPCC<-predict(MPCC, testdata[c(1,3,4,5,7,8,9)])
predRCC<-predict(MRCC, testdata[c(1,3,4,5,7,8,10)])
predfw<-predict(Mfw, testdata[c(1,3,4,5,7,8,11)])
predSteel<-predict(MSteel, testdata[c(1,3,4,5,7,8,12)])
predrate<-predict(Mrate, testdata[c(1,3,4,5,7,8,12)])
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = testPCC, colour = "yellow")) +
geom_line(aes(y = predPCC, colour = "red"))
testPCC
predPCC
Capacity
ggplot(data=ESR, aes(x=Capacity, y=PCC, group=1)) +
geom_line()+
geom_point()
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "yellow")) +
geom_line(aes(y = PCC, colour = "red"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "yellow")) +
geom_line(aes(y = PredPCC, colour = "red"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "yellow")) +
geom_line(aes(y = predPCC, colour = "red"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "yellow")) +
geom_line(aes(y = PCC, colour = "red"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "yellow")) +
geom_line(aes(y = RCC, colour = "red"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = RCC, colour = "Formwork"))+
geom_line(aes(y = RCC, colour = "Rft"))+
geom_line(aes(y = RCC, colour = "RatePerLit"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))+
geom_line(aes(y = Rft, colour = "Rft"))+
geom_line(aes(y = RatePerLit, colour = "RatePerLit"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))+
geom_line(aes(y = Rft, colour = "Rft"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))+
geom_line(aes(y = Rft, colour = "Rft"))+
geom_line(aes(y = RatePerLit, colour = "RatePerLit"))
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))+
geom_line(aes(y = Rft, colour = "Rft"))+
geom_line(aes(y = RatePerLit, colour = "RatePerLit"))+
geom_point(predPCC)
ggplot(ESR, aes(Capacity)) +
geom_line(aes(y = PCC, colour = "PCC")) +
geom_line(aes(y = RCC, colour = "RCC"))+
geom_line(aes(y = Formwork, colour = "Formwork"))+
geom_line(aes(y = Rft, colour = "Rft"))+
geom_line(aes(y = RatePerLit, colour = "RatePerLit"))+
geom_point(predPCC)
summary(traindata)
traindata[c(1,3,4,5,7,8,9)]
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
summary(traindata)
traindata
pred_grid <- expand.grid( State='Madhya Pradesh',SesimicZone='Zone-2', WindSpeed=39 ,   SBC=20 , Capacity = 50  , StagingHeight=12 )
pred_grid
predPCC<-predict(MPCC, pred_grid)
MPCC <- randomForest(PCC ~ ., data=traindata[c(1,3,4,5,7,8,9)], ntree=5)
predPCC<-predict(MPCC, testdata[c(1,3,4,5,7,8,9)])
pred_grid <- expand.grid( State='Madhya Pradesh',SesimicZone='Zone-2', WindSpeed=39 ,   SBC=20 , Capacity = 50  , StagingHeight=12 )
predPCC<-predict(MPCC, pred_grid)
traindata
traindata[c(1,3,4,5,7,8,9)]
pred_grid <- expand.grid( State='Rajasthan',SesimicZone='Zone-2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
predPCC<-predict(MPCC, pred_grid)
pred_grid
pred_grid <- c( State='Rajasthan',SesimicZone='Zone-2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
predPCC<-predict(MPCC, pred_grid)
pred_grid <- c( 'Rajasthan','Zone-2', 47, 10, 250  , 20 )
predPCC<-predict(MPCC, pred_grid)
pred_grid <- c( 'Rajasthan','Zone-2', 47, 10, 250  , 20 )
pred_grid
predPCC
predict(MPCC, pred_grid)
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone-2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
pred_grid
predPCC<-predict(MPCC, pred_grid)
pred_grid
traindata
summary(traindata)
ESR <- read_excel("Rshiny/Dashboard/ESR.xlsx")
View(ESR)
set.seed(100)
n=nrow(ESR)
summary(ESR)
ESR$PCC[is.na(ESR$PCC)] <- 0
ESR$State<-as.factor(ESR$State)
ESR$Project<-as.factor(ESR$Project)
ESR$`SesimicZone`<-as.factor(ESR$`SesimicZone`)
ESR$PCC[is.na(ESR$PCC)] <- 0
ESR$State<-as.factor(ESR$State)
ESR$Project<-as.factor(ESR$Project)
ESR$`SesimicZone`<-as.factor(ESR$`SesimicZone`)
ESR$`NatureofStrata`<-as.factor(ESR$`NatureofStrata`)
trainIndex<-sample(1:n, size = round(0.8*n), replace=FALSE)
traindata<-ESR[trainIndex,]
testdata<-ESR[-trainIndex,]
testPCC<-testdata$PCC
testRCC<-testdata$RCC
testfw<-testdata$Formwork
teststeel<-testdata$`Rft`
testrate<-traindata$`RatePerLit`
MPCC <- randomForest(PCC ~ ., data=traindata[c(1,3,4,5,7,8,9)], ntree=5)
MRCC <- randomForest(RCC ~ ., data=traindata[c(1,3,4,5,7,8,10)], ntree=5)
Mfw <-randomForest(Formwork ~ ., data=traindata[c(1,3,4,5,7,8,11)], ntree=5)
MSteel <-randomForest(Rft ~ ., data=traindata[c(1,3,4,5,7,8,12)], ntree=5)
Mrate <-randomForest(RatePerLit ~ ., data=traindata[c(1,3,4,5,7,8,13)], ntree=5)
predPCC<-predict(MPCC, testdata[c(1,3,4,5,7,8,9)])
predRCC<-predict(MRCC, testdata[c(1,3,4,5,7,8,10)])
predfw<-predict(Mfw, testdata[c(1,3,4,5,7,8,11)])
predSteel<-predict(MSteel, testdata[c(1,3,4,5,7,8,12)])
predrate<-predict(Mrate, testdata[c(1,3,4,5,7,8,12)])
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone-2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
predPCC<-predict(MPCC, pred_grid)
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone -2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
predPCC<-predict(MPCC, pred_grid)
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone -2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
pred_grid
summary(pred_grid)
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone -2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
pred_grid$State<-as.factor(pred_grid$State)
pred_grid$SesimicZone<-as.factor(pred_grid$SesimicZone)
summary(pred_grid)
predPCC<-predict(MPCC, pred_grid)
pred_grid <- data.frame( State='Rajasthan',SesimicZone='Zone -2', WindSpeed=47,   SBC=10, Capacity = 250  , StagingHeight=20 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
predPCC<-predict(MPCC, pred_grid)
predPCC
pred_grid <- data.frame( State='Madhya Pradesh',SesimicZone='Zone -2', WindSpeed=39,   SBC=20, Capacity = 50  , StagingHeight=12 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
predPCC<-predict(MPCC, pred_grid)
predPCC
pred_grid <- data.frame( State='Madhya Pradesh',SesimicZone='Zone -2', WindSpeed=39,   SBC=20, Capacity = 50  , StagingHeight=12 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
pred_grid
predPCC<-predict(MPCC, pred_grid)
predPCC
pred_grid <- data.frame( State='Madhya Pradesh',SesimicZone='Zone -2', WindSpeed=39,   SBC=20, Capacity = 100  , StagingHeight=12 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
predPCC<-predict(MPCC, pred_grid)
predPCC
pred_grid <- data.frame( State='Madhya Pradesh',SesimicZone='Zone -2', WindSpeed=39,   SBC=20, Capacity = 110  , StagingHeight=12 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
predPCC<-predict(MPCC, pred_grid)
predPCC
runApp('Rshiny/Dashboard')
pred_grid <- data.frame( State='Madhya Pradesh',SesimicZone='Zone -2', WindSpeed=39,   SBC=20, Capacity = 110  , StagingHeight=12 )
levels(pred_grid$State) <- levels(testdata$State)
levels(pred_grid$SesimicZone) <- levels(testdata$SesimicZone)
predPCC<-predict(MPCC, pred_grid)
summary(pred_grid)
predPCC
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
traindata[c(1,3,4,5,7,8,9)]
traindata[c(1,3,5,7,8,9)]
traindata[c(1,3,4,5,7,8,9)]
ESR_NoSBC<-ESR[-5]
ESR_NoSBC$PCC[is.na(ESR_NoSBC$PCC)] <- 0
ESR_NoSBC$State<-as.factor(ESR_NoSBC$State)
ESR_NoSBC$Project<-as.factor(ESR_NoSBC$Project)
ESR_NoSBC$`Sesimic Zone`<-as.factor(ESR_NoSBC$`Sesimic Zone`)
ESR_NoSBC$`Nature of Strata`<-as.factor(ESR_NoSBC$`Nature of Strata`)
i
i
traindata[c(1,3,4,5,7,8,9)]
ESR_NoSBC<-ESR[-5]
ESR_NoSBC$PCC[is.na(ESR_NoSBC$PCC)] <- 0
ESR_NoSBC$State<-as.factor(ESR_NoSBC$State)
ESR_NoSBC$Project<-as.factor(ESR_NoSBC$Project)
ESR_NoSBC$`SesimicZone`<-as.factor(ESR_NoSBC$`SesimicZone`)
ESR_NoSBC$`NatureofStrata`<-as.factor(ESR_NoSBC$`NatureofStrata`)
trainIndex_Nosbc<-sample(1:n, size = round(0.8*n), replace=FALSE)
traindata_Nosbc<-ESR[trainIndex,]
testdata_Nosbc<-ESR[-trainIndex,]
testPCC_NoSBC<-traindata$PCC
testRCC_NoSBC<-traindata$RCC
testfw_NoSBC<-traindata$Formwork
teststeel_NoSBC<-traindata$`Rft`
testrate_NoSBC<-traindata$`RatePerLit`
testdata_Nosbc
traindata[c(1,3,4,5,7,8,9)]
ESR_NoSBC<-ESR[-5]
ESR_NoSBC$PCC[is.na(ESR_NoSBC$PCC)] <- 0
ESR_NoSBC$State<-as.factor(ESR_NoSBC$State)
ESR_NoSBC$Project<-as.factor(ESR_NoSBC$Project)
ESR_NoSBC$`SesimicZone`<-as.factor(ESR_NoSBC$`SesimicZone`)
ESR_NoSBC$`NatureofStrata`<-as.factor(ESR_NoSBC$`NatureofStrata`)
trainIndex_Nosbc<-sample(1:n, size = round(0.8*n), replace=FALSE)
traindata_Nosbc<-ESR_NoSBC[trainIndex,]
testdata_Nosbc<-ESR_NoSBC[-trainIndex,]
testPCC_NoSBC<-traindata$PCC
testRCC_NoSBC<-traindata$RCC
testfw_NoSBC<-traindata$Formwork
teststeel_NoSBC<-traindata$`Rft`
testrate_NoSBC<-traindata$`RatePerLit`
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_NoSBC[c(1,3,4,5,7,8,9)], ntree=5)
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_Nosbc[c(1,3,4,5,7,8,9)], ntree=5)
MRCC_NoSBC <- randomForest(RCC ~ ., data=traindata_Nosbc[c(1,3,4,5,7,8,10)], ntree=5)
traindata_Nosbc
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,8)], ntree=5)
MRCC_NoSBC <- randomForest(RCC ~ ., data=traindata_Nosbc[c(11,3,4,6,7,9)], ntree=5)
Mfw_NoSBC <-randomForest(Formwork ~ ., data=traindata_Nosbc[c(1,3,4,6,7,10)], ntree=5)
MSteel_NoSBC <-randomForest(Rft ~ ., data=traindata_NoSBC[c(1,3,4,6,7,11)], ntree=5)
Mrate_NoSBC <-randomForest(RatePerLit ~ ., data=traindata_Nosbc[c(1,3,4,6,7,12)], ntree=5)
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,8)], ntree=5)
MRCC_NoSBC <- randomForest(RCC ~ ., data=traindata_Nosbc[c(11,3,4,6,7,9)], ntree=5)
Mfw_NoSBC <-randomForest(Formwork ~ ., data=traindata_Nosbc[c(1,3,4,6,7,10)], ntree=5)
MSteel_NoSBC <-randomForest(Rft ~ ., data=traindata_Nosbc[c(1,3,4,6,7,11)], ntree=5)
Mrate_NoSBC <-randomForest(RatePerLit ~ ., data=traindata_Nosbc[c(1,3,4,6,7,12)], ntree=5)
predPCC_NoSBC<-predict(MPCC, testdata_NoSBC[c(1,3,4,5,7,8,9)])
predRCC_NoSBC<-predict(MPCC, testdata_NoSBC[c(1,3,4,5,7,8,9)])
predfw_NoSBC<-predict(MPCC, testdata_NoSBC[c(1,3,4,5,7,8,9)])
predSteel_NoSBC<-predict(MPCC, testdata_NoSBC[c(1,3,4,5,7,8,9)])
testdata_NoSBC
testdata_Nosbc[c(1,3,4,5,7,8,9)]
testdata_Nosbc[c(1,3,4,6,7,8,9)]
predPCC_NoSBC<-predict(MPCC, testdata_Nosbc[c(1,3,4,6,7,8)])
testdata_Nosbc[c(1,3,4,6,7,8)]
predPCC_NoSBC<-predict(MPCC, testdata_Nosbc[c(1,3,4,6,7,8)])
predRCC_NoSBC<-predict(MPCC, testdata_Nosbc[c(1,3,4,6,7,9)])
predfw_NoSBC<-predict(MPCC, testdata_Nosbc[c(1,3,4,6,7,10)])
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,8)], ntree=5)
MRCC_NoSBC <- randomForest(RCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,9)], ntree=5)
Mfw_NoSBC <-randomForest(Formwork ~ ., data=traindata_Nosbc[c(1,3,4,6,7,10)], ntree=5)
MSteel_NoSBC <-randomForest(Rft ~ ., data=traindata_Nosbc[c(1,3,4,6,7,11)], ntree=5)
Mrate_NoSBC <-randomForest(RatePerLit ~ ., data=traindata_Nosbc[c(1,3,4,6,7,12)], ntree=5)
predPCC_NoSBC<-predict(MPCC, testdata_Nosbc[c(1,3,4,6,7,8)])
MPCC_NoSBC <- randomForest(PCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,8)], ntree=5)
MRCC_NoSBC <- randomForest(RCC ~ ., data=traindata_Nosbc[c(1,3,4,6,7,9)], ntree=5)
Mfw_NoSBC <-randomForest(Formwork ~ ., data=traindata_Nosbc[c(1,3,4,6,7,10)], ntree=5)
MSteel_NoSBC <-randomForest(Rft ~ ., data=traindata_Nosbc[c(1,3,4,6,7,11)], ntree=5)
Mrate_NoSBC <-randomForest(RatePerLit ~ ., data=traindata_Nosbc[c(1,3,4,6,7,12)], ntree=5)
predPCC_NoSBC<-predict(MPCC_NoSBC, testdata_Nosbc[c(1,3,4,6,7,8)])
predRCC_NoSBC<-predict(MRCC_NoSBC, testdata_Nosbc[c(1,3,4,6,7,9)])
predfw_NoSBC<-predict(Mfw_NoSBC, testdata_Nosbc[c(1,3,4,6,7,10)])
predSteel_NoSBC<-predict(MSteel_NoSBC, testdata_Nosbc[c(1,3,4,6,7,11)])
predrate_NoSBC<-predict(Mrate_NoSBC, testdata_Nosbc[c(1,3,4,6,7,12)])
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Myproject')
runApp('Rshiny/Myproject')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
install.packages("ggthemes")
install.packages("ggthemes")
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
install.packages("ggplot2")
install.packages("~/Downloads/ggplot2_3.0.0.tar", repos = NULL)
install.packages("ggplot2")
runApp('Rshiny/Dashboard')
update.packages(checkBuilt = TRUE)
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/new')
runApp('Rshiny/Myproject')
runApp('Rshiny/new')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Myproject')
shiny::runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
install.packages("ggrepel")
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
install.packages("gpuR")
install.packages("ggpubr")
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
shiny::runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
shiny::runApp('Rshiny/Dashboard copy')
(17.63*100000)/18000
(25.06*100000)/30000
(33.82*100000)/50000
(66.76*100000)/35000
(6.76*100000)/35000
(36.01*100000)/35000
runApp('Rshiny/Dashboard copy')
(10.29*350*1000)
runApp('Rshiny/Dashboard copy')
shiny::runApp('Rshiny/Dashboard')
library(readxl)
ESR <- read_excel("ESR.xlsx")
library(readxl)
ESR <- read_excel("Rshiny/Dashboard/ESR.xlsx")
View(ESR)
ESR$PCC[is.na(ESR$PCC)] <- 0
n=nrow(ESR)
set.seed(150)
n=nrow(ESR)
summary(ESR)
runApp('Rshiny/Dashboard')
runApp('Rshiny/Dashboard')
