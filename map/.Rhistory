#F-statistic: 64.52 on 9 and 666 DF,  p-value: < 2.2e-16
library(leaps)
grad=regsubsets(Grad.Rate~., data=traindata, nbest=9)
grad.sum<-summary(grad)
names(grad.sum)
grad.sum$adjr2
#################RATIOS##############################
summary(College)
CollegeCont<-College[c(-2,-3,-4)]
appenrollrt<-College$Enroll/College$Apps
summary(CollegeCont)
CollegeCont<-cbind(CollegeCont,appenrollrt)
c<-cor(CollegeCont[-1])
ggcorrplot(c, type='full',lab=TRUE)
set.seed(75)
nWI=nrow(CollegeCont)
trainIndexWI<-sample(1:nWI, size = round(0.87*nWI), replace=FALSE)
traindataWI<-College[trainIndexWI,]
testdataWI<-College[-trainIndexWI,]
#################RATIOS##############################
summary(College)
CollegeCont<-College[c(-2,-3,-4,-5)]
appenrollrt<-College$Enroll/College$Apps
summary(CollegeCont)
CollegeCont<-cbind(CollegeCont,appenrollrt)
c<-cor(CollegeCont[-1])
ggcorrplot(c, type='full',lab=TRUE)
appnaccprrt<-College$Accept/College$Apps
CollegeCont<-cbind(CollegeCont,appnaccprrt)
summary(CollegeCont)
CollegeCont<-College[c(-2,-3,-4)]
appenrollrt<-College$Enroll/College$Apps
appnaccprrt<-College$Accept/College$Apps
CollegeCont<-cbind(CollegeCont,appenrollrt)
CollegeCont<-cbind(CollegeCont,appnaccprrt)
summary(CollegeCont)
c<-cor(CollegeCont[-1])
ggcorrplot(c, type='full',lab=TRUE)
set.seed(75)
nWI=nrow(CollegeCont)
trainIndexWI<-sample(1:nWI, size = round(0.87*nWI), replace=FALSE)
traindataWI<-College[trainIndexWI,]
testdataWI<-College[-trainIndexWI,]
nullfitWI<-lm(Grad.Rate~1,data= traindataWI)
highfitWI<-lm(Grad.Rate~.,data= traindataWI)
#Forward model
trainWI.fitFwd<-step(nullfitWI, scope=list(lower=nullfitWI, upper=highfitWI), direction="forward")
summary(trainWI.fitFwd)
anova(trainWI.fitFwd)
modelWI1<-lm(formula = Grad.Rate ~ Outstate + Top25perc + perc.alumni +
P.Undergrad + Apps + Room.Board + Expend + Private + Personal,
data = traindataWI)
summary(modelWI1)
anova(modelWI1)
##Backward
trainWI.fitback<-step(highfitWI, scope=list(lower=nullfitWI, upper=highfitWI), direction="backward")
#Step:  AIC=3451.61
#Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad + Outstate + Room.Board + Personal + perc.alumni + Expend
summary(trainWI.fitback)
#Step:  AIC=3451.61
#Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad + Outstate + Room.Board + Personal + perc.alumni + Expend
summary(trainWI.fitback)
anova(trainWI.fitback)
#Stepwise
trainstepWI <-step(nullfitWI, list(lower=nullfitWI,upper=highfitWI,direction="both"))
summary(trainWI.fitback)
anova(trainWI.fitback)
summary(trainstepWI)
anova(trainstepWI)
#Load data
library(ISLR)
library(ggcorrplot)
View(College)
data(College)
#univariate analysis
summary(College) #no values missing
corrdata<-round(cor(College[-1]),2)
corrplot.mixed(corrdata, title = "Correlation matrix for test data")
ggcorrplot(corrdata, type='full',lab=TRUE)
#Histogram
par(mfrow=c(1,1))
hist(College$Grad.Rate)
#Pairwise correlation
pairs(round(cor(CollegeCont[-1]),2))
summary(CollegeCont)
set.seed(75)
n=nrow(College)
trainIndex<-sample(1:n, size = round(0.87*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
summary(traindata)
nullfit<-lm(Grad.Rate~1,data= traindata)
highfit<-lm(Grad.Rate~.,data= traindata)
#Forward model
train.fitFwd<-step(nullfit, scope=list(lower=nullfit, upper=highfit), direction="forward")
summary(train.fitFwd)
anova(train.fitFwd)
##Step:  AIC=3451.61
##Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad +Apps + Room.Board + Expend + Private + Personal
#Residual standard error: 12.75 on 666 degrees of freedom
#Multiple R-squared:  0.4658,	Adjusted R-squared:  0.4586
#F-statistic: 64.52 on 9 and 666 DF,  p-value: < 2.2e-16
model1<-lm(Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad +Apps + Room.Board + Expend + Private+ Personal ,data= traindata)
summary(model1)
plot(model1)
##AIC=3451.61
##Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad + Outstate + Room.Board + Personal + perc.alumni + Expend
##Residual standard error: 12.75 on 666 degrees of freedom
##Multiple R-squared:  0.4658,	Adjusted R-squared:  0.4586
##F-statistic: 64.52 on 9 and 666 DF,  p-value: < 2.2e-16
model2<-lm(Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad + Outstate + Room.Board + Personal + perc.alumni + Expend,data=traindata)
summary(model2)
anova(model2)
#stewise model
trainstep <-step(nullfit, list(lower=nullfit,upper=highfit,direction="both"))
#Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal
#AIC=3451.61
model3<-lm(Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal,data=traindata)
summary(model3)
#Residual standard error: 12.75 on 666 degrees of freedom
#Multiple R-squared:  0.4658,	Adjusted R-squared:  0.4586
#F-statistic: 64.52 on 9 and 666 DF,  p-value: < 2.2e-16
library(leaps)
grad=regsubsets(Grad.Rate~., data=traindata, nbest=9)
grad.sum<-summary(grad)
names(grad.sum)
grad.sum$adjr2
#################RATIOS##############################
summary(College)
CollegeCont<-College[c(-2,-3,-4)]
appenrollrt<-College$Enroll/College$Apps
appnaccprrt<-College$Accept/College$Apps
summary(CollegeCont)
CollegeCont<-cbind(CollegeCont,appenrollrt,appnaccprrt)
c<-cor(CollegeCont[-1])
ggcorrplot(c, type='full',lab=TRUE)
set.seed(75)
nWI=nrow(CollegeCont)
trainIndexWI<-sample(1:nWI, size = round(0.87*nWI), replace=FALSE)
traindataWI<-College[trainIndexWI,]
testdataWI<-College[-trainIndexWI,]
nullfitWI<-lm(Grad.Rate~1,data= traindataWI)
highfitWI<-lm(Grad.Rate~.,data= traindataWI)
#Forward model
trainWI.fitFwd<-step(nullfitWI, scope=list(lower=nullfitWI, upper=highfitWI), direction="forward")
#Step:  AIC=3451.61
#Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal
summary(trainWI.fitFwd)
anova(trainWI.fitFwd)
modelWI1<-lm(formula = Grad.Rate ~ Outstate + Top25perc + perc.alumni +
P.Undergrad + Apps + Room.Board + Expend + Private + Personal,
data = traindataWI)
summary(modelWI1)
anova(modelWI1)
##Backward
trainWI.fitback<-step(highfitWI, scope=list(lower=nullfitWI, upper=highfitWI), direction="backward")
#Step:  AIC=3451.61
#Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad + Outstate + Room.Board + Personal + perc.alumni + Expend
summary(trainWI.fitback)
anova(trainWI.fitback)
#Stepwise
#Step:  AIC=3451.61
#Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal
trainstepWI <-step(nullfitWI, list(lower=nullfitWI,upper=highfitWI,direction="both"))
summary(trainstepWI)
anova(trainstepWI)
round(vif(trainstepWI),2)
round(vif(trainstepWI),2)
library(car)
round(vif(trainstepWI),2)
mm<-lm(Grad.Rate ~  Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal, data=traindataWI)
summary(mm)
summary(trainstepWI)
mm<-lm(Grad.Rate ~  Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal, data=traindataWI)
summary(mm)
1/mm<-1/lm(Grad.Rate ~  Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal, data=traindataWI)
mm<-lm(1/(Grad.Rate) ~  1/(Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal), data=traindataWI)
summary(mm)
plot(mm)
mm
summary(mm)
anova(mm)
mn<-lm(log(Grad.Rate) ~  log(Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal), data=traindataWI)
mn<-lm(sqrt(Grad.Rate) ~  sqrt(Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal), data=traindataWI)
#Stepwise
#Step:  AIC=3451.61
#Grad.Rate ~ Outstate + Top25perc + perc.alumni + P.Undergrad + Apps + Room.Board + Expend + Private + Personal
trainstepWI <-step(nullfitWI, list(lower=nullfitWI,upper=highfitWI,direction="both"))
summary(trainstepWI)
trainIndex<-sample(1:n, size = round(0.8786*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex<-sample(1:n, size = round(0.878*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex<-sample(1:n, size = round(0.877*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex<-sample(1:n, size = round(0.8782*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex<-sample(1:n, size = round(0.8783*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex<-sample(1:n, size = round(0.87825*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
trainIndex
trainIndex<-sample(1:n, size = round(0.8781*n), replace=FALSE)
traindata<-College[trainIndex,]
testdata<-College[-trainIndex,]
plot(trainstepWI, scale="adjr2")
plot(trainstepWI, scale="adjr2")
t=regsubsets(Grad.Rate~., data=trainstepWI, nbest=8)
plot(t, scale="adjr2")
plot(t, scale="bic")
ff=regsubsets(Grad.Rate~., data=trainWI, nbest=8)
ff=regsubsets(Grad.Rate~., data=traindataWI, nbest=8)
plot(Concrete.fit6, scale="adjr2")
plot(ff, scale="adjr2")
plot(ff, scale="bic")
shiny::runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
install.packages("RColorBrewer")
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
shiny::runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
library("leaflet", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
install.packages("ggmap")
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
install.packages("shinyjs")
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
library(readxl)
Shortlist <- read_excel("~/Desktop/Shortlist.xlsx")
View(Shortlist)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
Shortlist$SesimicZone<-as.factor(Shortlist$SesimicZone)
Shortlist$NatureofStrata<-as.factor(Shortlist$NatureofStrata)
library(readxl)
Shortlist <- read_excel("~/Desktop/Shortlist.xlsx",
sheet = "CWR", col_types = c("blank",
"text", "blank", "blank", "text",
"numeric", "numeric", "text", "blank",
"blank", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(Shortlist)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
Shortlist$SesimicZone<-as.factor(Shortlist$SesimicZone)
Shortlist$NatureofStrata<-as.factor(Shortlist$NatureofStrata)
#########PCC
cwr<- Shortlist[c(2,3,6,7)]
summary(cwr)
library(readxl)
Shortlist <- read_excel("~/Desktop/Shortlist.xlsx",
sheet = "CWR", col_types = c("blank",
"text", "text", "text", "text", "numeric",
"numeric", "blank", "blank", "blank",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(Shortlist)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
Shortlist$SesimicZone<-as.factor(Shortlist$SesimicZone)
library(readxl)
Shortlist <- read_excel("~/Desktop/Shortlist.xlsx",
sheet = "CWR", col_types = c("blank",
"text", "blank", "blank", "text",
"numeric", "numeric", "text", "blank",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(Shortlist)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
Shortlist$SesimicZone<-as.factor(Shortlist$SesimicZone)
Shortlist$NatureofStrata<-as.factor(Shortlist$NatureofStrata)
summary(Shortlist)
library(readxl)
Shortlist <- read_excel("~/Desktop/Shortlist.xlsx",
sheet = "CWR", col_types = c("blank",
"blank", "text", "blank", "text",
"numeric", "numeric", "text", "blank",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(Shortlist)
summary(Shortlist)
Shortlist$Project<-as.factor(Shortlist$Project)
Shortlist$SesimicZone<-as.factor(Shortlist$SesimicZone)
Shortlist$NatureofStrata<-as.factor(Shortlist$NatureofStrata)
#########PCC
cwr<- Shortlist[c(2,3,6,7)]
summary(cwr)
##model making
cwrnull<-lm(PCC~1, data=cwr)
highfit<-lm(PCC~., data=cwr)
high.fit2 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="forward")
bckCredit = step(highfit)
high.fit3 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="both")
##model
resultPCC<-lm(PCC ~ `Capacity(inKL)` + SesimicZone, data=cwr)
summary(resultPCC)
anova(resultPCC)
Capacity <-c(1000)
Zone <- c('Zone-3')
pred_grid <- expand.grid(`Capacity(inKL)` = Capacity, SesimicZone = Zone)
predictionPCC <- predict(resultPCC, newdata = pred_grid )
print(prediction)
print(predictionPCC)
cwr<- Shortlist[c(2,3,6,8)]
summary(cwr)
cwrnullR<-lm(RCC~1, data=cwr)
highfitR<-lm(RCC~., data=cwr)
high.fit2 <- step(cwrnullR, scope=list(lower=cwrnullR, upper=highfitR), direction="forward")
bckCredit = step(highfitR)
high.fit3 <- step(cwrnullR, scope=list(lower=cwrnullR, upper=highfitR), direction="both")
resultPCC<-glm(RCC ~ `Capacity(inKL)` + SesimicZone, data=cwr)
summary(resultRCC)
resultRCC<-glm(RCC ~ `Capacity(inKL)` + SesimicZone, data=cwr)
summary(resultRCC)
anova(resultRCC)
Capacity <-c(1000)
Zone <- c('Zone-3')
pred_grid <- expand.grid(`Capacity(inKL)` = Capacity, SesimicZone = Zone)
prediction <- predict(resultRCC, newdata = pred_grid )
print(prediction)
summary(Shortlist)
#########PCC
cwr<- Shortlist[c(1:7)]
summary(cwr)
##model making
cwrnull<-lm(PCC~1, data=cwr)
highfit<-lm(PCC~., data=cwr)
#########PCC
cwr<- Shortlist[c(1:7)]
summary(cwr)
##model making
cwrnull<-lm(PCC~1, data=cwr)
highfit<-lm(PCC~., data=cwr)
#########PCC
cwr<- Shortlist[c(1,2,3,4,6,7)]
summary(cwr)
##model making
cwrnull<-lm(PCC~1, data=cwr)
highfit<-lm(PCC~., data=cwr)
high.fit2 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="forward")
bckCredit = step(highfit)
high.fit3 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="both")
##model
resultPCC<-lm(PCC ~ `Capacity(inKL)` + SesimicZone, data=cwr)
summary(resultPCC)
anova(resultPCC)
Capacity <-c(1000)
Zone <- c('Zone-3')
pred_grid <- expand.grid(`Capacity(inKL)` = Capacity, SesimicZone = Zone)
predictionPCC <- predict(resultPCC, newdata = pred_grid )
print(predictionPCC)
#########PCC
cwr<- Shortlist[c(2,3,4,6,7)]
summary(cwr)
##model making
cwrnull<-lm(PCC~1, data=cwr)
highfit<-lm(PCC~., data=cwr)
high.fit2 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="forward")
bckCredit = step(highfit)
high.fit3 <- step(cwrnull, scope=list(lower=cwrnull, upper=highfit), direction="both")
##model
resultPCC<-lm(PCC ~ `Capacity(inKL)` + SesimicZone, data=cwr)
summary(resultPCC)
anova(resultPCC)
Capacity <-c(1000)
Zone <- c('Zone-3')
pred_grid <- expand.grid(`Capacity(inKL)` = Capacity, SesimicZone = Zone)
predictionPCC <- predict(resultPCC, newdata = pred_grid )
print(predictionPCC)
summary(cwr)
summary(Shortlist)
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
install.packages("googleway")
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
runApp('~/Rshiny/Myproject')
